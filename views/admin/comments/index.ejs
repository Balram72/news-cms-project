<div id="admin-content">
  <div class="container">
    <div class="row">
      <div class="col-md-12">
        <h1 class="admin-heading"><i class="fa fa-comments"></i> Comments Management</h1>
      </div>
      <div class="col-md-12">
        <div id="commentTable" data-users='<%- JSON.stringify(comments) %>'></div>
      </div>
    </div>
  </div>
</div>
<!-- comment Model Start-->
<div class="modal" id="commentModal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="commentModalLabel">Modal title</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body" id="commentModalBody">

      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>



<script type="text/javascript"
  src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.7/dist/js/bootstrap.bundle.min.js"></script>
<script type="text/javascript" src="https://unpkg.com/tabulator-tables@6.3.1/dist/js/tabulator.min.js"></script>
<script>
  const tableElement = document.getElementById("commentTable");
  const tableData = JSON.parse(tableElement.dataset.users);
  const table = new Tabulator("#commentTable", {
    data: tableData,
    layout: "fitColumns",
    pagination: true,
    paginationSize: 10,
    paginationSizeSelector: [5, 10, 20, 50, 100],
    theme: "bootstrap5",
    columns: [
      { title: "S.No.", formatter: "rownum", width: 100, hozAlign: "center" },
      { title: "Article Name", field: "article.title", headerFilter: "input", hozAlign: "center" },
      { title: "User Comment", field: "content", headerFilter: "input", hozAlign: "center" },
      { title: "User Name", field: "name", headerFilter: "input", hozAlign: "center" },
      // { title: "User Email", field: "email", headerFilter: "input", hozAlign: "center" },
      // { title: "Author Name", field: "author.fullname", headerFilter: "input", hozAlign: "center" },
      { title: "Status", field: "status", headerFilter: "input", hozAlign: "center" },

      {
        title: "Created At", field: "createdAt", headerFilter: "input", formatter: function (cell) {
          const value = cell.getValue();
          if (!value) return "";
          const date = new Date(value);
          const day = String(date.getDate()).padStart(2, '0');
          const month = date.toLocaleString('default', { month: 'short' });
          const year = date.getFullYear();
          return `${day}-${month}-${year}`;
        },
        hozAlign: "center"
      },
      {
        title: "Action",
        formatter: function (cell) {
          return `
            <button onclick="viewComment('${cell.getData()._id}')" class="btn btn-sm btn-outline-success">
              <i class="fa fa-eye"></i>
            </button>
            <button onclick="deleteComment('${cell.getData()._id}')" class="btn btn-sm btn-outline-danger delete-comment">
              <i class="fa fa-trash-o"></i>
            </button>
          `;
        }
      }
    ],
  });
  // View  Comment

  async function viewComment(id) {
    const comment = tableData.find(comment => comment._id === id);
    const html = `<p><b> Message </b> :${comment.content} </p>
      <select class="form-select" onchange="updateCommentStatus('${comment._id}', this.value)">
          <option value="pending" ${comment.status === 'pending' ? 'selected' : ''}>Pending</option>
          <option value="approved" ${comment.status === 'approved' ? 'selected' : ''}>Approved</option>
          <option value="rejected" ${comment.status === 'rejected' ? 'selected' : ''}>Rejected</option>
      </select>

    `;
    const modal = new bootstrap.Modal(document.getElementById('commentModal'))
    document.getElementById('commentModalLabel').textContent = `Comment By ${comment.name}`;
    const modalBody = document.getElementById('commentModalBody')
    modalBody.innerHTML = html;
    modal.show();
  }
  //Update status Change 
  async function updateCommentStatus(id, status) {
    try {
      const response = await fetch(`/admin/update-comment-status/${id}`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ status }), // send the status in the body
      });

      const data = await response.json();

      if (data.success) {
        window.location.reload();
      }
    } catch (error) {
      console.error(error);
    }
  }

  // Delete user function
  async function deleteComment(id) {
    try {
      if (confirm("Are you sure you want to delete this Comment?")) {
        const response = await fetch(`/admin/delete-comment/${id}`, {
          method: 'delete',
        });
        if (response.ok) {
          window.location.reload();
        }
      }
    } catch (error) {
      console.error("Error deleting user:", error);
    }
  }

</script>
<%- contentFor('tabulatorCSS') %>
  <link href="https://unpkg.com/tabulator-tables@6.3.1/dist/css/tabulator.min.css" rel="stylesheet">
  <link href="https://unpkg.com/tabulator-tables@5.5.0/dist/css/tabulator_bootstrap5.min.css" rel="stylesheet">